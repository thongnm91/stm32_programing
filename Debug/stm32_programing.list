
stm32_programing.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000160  0800013c  0800013c  0001013c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800029c  080002a4  000102a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  0800029c  0800029c  0001029c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080002a0  080002a0  000102a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  000102a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  080002a4  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000400  2000001c  080002a4  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  000102a4  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000e23  00000000  00000000  000102cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000002a9  00000000  00000000  000110f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000070  00000000  00000000  000113a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00011410  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00000483  00000000  00000000  00011458  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000006a9  00000000  00000000  000118db  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  00011f84  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000000b0  00000000  00000000  00012000  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000003f  00000000  00000000  000120b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0800013c <__do_global_dtors_aux>:
 800013c:	b510      	push	{r4, lr}
 800013e:	4c05      	ldr	r4, [pc, #20]	; (8000154 <__do_global_dtors_aux+0x18>)
 8000140:	7823      	ldrb	r3, [r4, #0]
 8000142:	b933      	cbnz	r3, 8000152 <__do_global_dtors_aux+0x16>
 8000144:	4b04      	ldr	r3, [pc, #16]	; (8000158 <__do_global_dtors_aux+0x1c>)
 8000146:	b113      	cbz	r3, 800014e <__do_global_dtors_aux+0x12>
 8000148:	4804      	ldr	r0, [pc, #16]	; (800015c <__do_global_dtors_aux+0x20>)
 800014a:	f3af 8000 	nop.w
 800014e:	2301      	movs	r3, #1
 8000150:	7023      	strb	r3, [r4, #0]
 8000152:	bd10      	pop	{r4, pc}
 8000154:	20000000 	.word	0x20000000
 8000158:	00000000 	.word	0x00000000
 800015c:	08000284 	.word	0x08000284

08000160 <frame_dummy>:
 8000160:	b508      	push	{r3, lr}
 8000162:	4b03      	ldr	r3, [pc, #12]	; (8000170 <frame_dummy+0x10>)
 8000164:	b11b      	cbz	r3, 800016e <frame_dummy+0xe>
 8000166:	4903      	ldr	r1, [pc, #12]	; (8000174 <frame_dummy+0x14>)
 8000168:	4803      	ldr	r0, [pc, #12]	; (8000178 <frame_dummy+0x18>)
 800016a:	f3af 8000 	nop.w
 800016e:	bd08      	pop	{r3, pc}
 8000170:	00000000 	.word	0x00000000
 8000174:	20000004 	.word	0x20000004
 8000178:	08000284 	.word	0x08000284

0800017c <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 800017c:	b480      	push	{r7}
 800017e:	b083      	sub	sp, #12
 8000180:	af00      	add	r7, sp, #0
  int i = 0;
 8000182:	2300      	movs	r3, #0
 8000184:	607b      	str	r3, [r7, #4]




  /* Infinite loop */
  while (1)
 8000186:	e7fe      	b.n	8000186 <main+0xa>

08000188 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8000188:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800018a:	e003      	b.n	8000194 <LoopCopyDataInit>

0800018c <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 800018c:	4b0b      	ldr	r3, [pc, #44]	; (80001bc <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 800018e:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8000190:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8000192:	3104      	adds	r1, #4

08000194 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8000194:	480a      	ldr	r0, [pc, #40]	; (80001c0 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 8000196:	4b0b      	ldr	r3, [pc, #44]	; (80001c4 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 8000198:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800019a:	429a      	cmp	r2, r3
  bcc CopyDataInit
 800019c:	d3f6      	bcc.n	800018c <CopyDataInit>
  ldr r2, =_sbss
 800019e:	4a0a      	ldr	r2, [pc, #40]	; (80001c8 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 80001a0:	e002      	b.n	80001a8 <LoopFillZerobss>

080001a2 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 80001a2:	2300      	movs	r3, #0
  str r3, [r2], #4
 80001a4:	f842 3b04 	str.w	r3, [r2], #4

080001a8 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 80001a8:	4b08      	ldr	r3, [pc, #32]	; (80001cc <LoopFillZerobss+0x24>)
  cmp r2, r3
 80001aa:	429a      	cmp	r2, r3
  bcc FillZerobss
 80001ac:	d3f9      	bcc.n	80001a2 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80001ae:	f000 f811 	bl	80001d4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80001b2:	f000 f843 	bl	800023c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b6:	f7ff ffe1 	bl	800017c <main>
  bx lr
 80001ba:	4770      	bx	lr
  ldr r3, =_sidata
 80001bc:	080002a4 	.word	0x080002a4
  ldr r0, =_sdata
 80001c0:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80001c4:	20000000 	.word	0x20000000
  ldr r2, =_sbss
 80001c8:	20000000 	.word	0x20000000
  ldr r3, = _ebss
 80001cc:	2000001c 	.word	0x2000001c

080001d0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d0:	e7fe      	b.n	80001d0 <ADC1_IRQHandler>
	...

080001d4 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 80001d8:	4a15      	ldr	r2, [pc, #84]	; (8000230 <SystemInit+0x5c>)
 80001da:	4b15      	ldr	r3, [pc, #84]	; (8000230 <SystemInit+0x5c>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80001e2:	6013      	str	r3, [r2, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 80001e4:	4912      	ldr	r1, [pc, #72]	; (8000230 <SystemInit+0x5c>)
 80001e6:	4b12      	ldr	r3, [pc, #72]	; (8000230 <SystemInit+0x5c>)
 80001e8:	689a      	ldr	r2, [r3, #8]
 80001ea:	4b12      	ldr	r3, [pc, #72]	; (8000234 <SystemInit+0x60>)
 80001ec:	4013      	ands	r3, r2
 80001ee:	608b      	str	r3, [r1, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 80001f0:	4a0f      	ldr	r2, [pc, #60]	; (8000230 <SystemInit+0x5c>)
 80001f2:	4b0f      	ldr	r3, [pc, #60]	; (8000230 <SystemInit+0x5c>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	f023 5388 	bic.w	r3, r3, #285212672	; 0x11000000
 80001fa:	f023 1301 	bic.w	r3, r3, #65537	; 0x10001
 80001fe:	6013      	str	r3, [r2, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000200:	4a0b      	ldr	r2, [pc, #44]	; (8000230 <SystemInit+0x5c>)
 8000202:	4b0b      	ldr	r3, [pc, #44]	; (8000230 <SystemInit+0x5c>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800020a:	6013      	str	r3, [r2, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 800020c:	4a08      	ldr	r2, [pc, #32]	; (8000230 <SystemInit+0x5c>)
 800020e:	4b08      	ldr	r3, [pc, #32]	; (8000230 <SystemInit+0x5c>)
 8000210:	689b      	ldr	r3, [r3, #8]
 8000212:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
 8000216:	6093      	str	r3, [r2, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000218:	4b05      	ldr	r3, [pc, #20]	; (8000230 <SystemInit+0x5c>)
 800021a:	2200      	movs	r2, #0
 800021c:	60da      	str	r2, [r3, #12]
#endif /* DATA_IN_ExtSRAM */
    
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 800021e:	4b06      	ldr	r3, [pc, #24]	; (8000238 <SystemInit+0x64>)
 8000220:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000224:	609a      	str	r2, [r3, #8]
#endif
}
 8000226:	bf00      	nop
 8000228:	46bd      	mov	sp, r7
 800022a:	bc80      	pop	{r7}
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	40023800 	.word	0x40023800
 8000234:	88ffc00c 	.word	0x88ffc00c
 8000238:	e000ed00 	.word	0xe000ed00

0800023c <__libc_init_array>:
 800023c:	b570      	push	{r4, r5, r6, lr}
 800023e:	2500      	movs	r5, #0
 8000240:	4e0c      	ldr	r6, [pc, #48]	; (8000274 <__libc_init_array+0x38>)
 8000242:	4c0d      	ldr	r4, [pc, #52]	; (8000278 <__libc_init_array+0x3c>)
 8000244:	1ba4      	subs	r4, r4, r6
 8000246:	10a4      	asrs	r4, r4, #2
 8000248:	42a5      	cmp	r5, r4
 800024a:	d109      	bne.n	8000260 <__libc_init_array+0x24>
 800024c:	f000 f81a 	bl	8000284 <_init>
 8000250:	2500      	movs	r5, #0
 8000252:	4e0a      	ldr	r6, [pc, #40]	; (800027c <__libc_init_array+0x40>)
 8000254:	4c0a      	ldr	r4, [pc, #40]	; (8000280 <__libc_init_array+0x44>)
 8000256:	1ba4      	subs	r4, r4, r6
 8000258:	10a4      	asrs	r4, r4, #2
 800025a:	42a5      	cmp	r5, r4
 800025c:	d105      	bne.n	800026a <__libc_init_array+0x2e>
 800025e:	bd70      	pop	{r4, r5, r6, pc}
 8000260:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000264:	4798      	blx	r3
 8000266:	3501      	adds	r5, #1
 8000268:	e7ee      	b.n	8000248 <__libc_init_array+0xc>
 800026a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800026e:	4798      	blx	r3
 8000270:	3501      	adds	r5, #1
 8000272:	e7f2      	b.n	800025a <__libc_init_array+0x1e>
 8000274:	0800029c 	.word	0x0800029c
 8000278:	0800029c 	.word	0x0800029c
 800027c:	0800029c 	.word	0x0800029c
 8000280:	080002a0 	.word	0x080002a0

08000284 <_init>:
 8000284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000286:	bf00      	nop
 8000288:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800028a:	bc08      	pop	{r3}
 800028c:	469e      	mov	lr, r3
 800028e:	4770      	bx	lr

08000290 <_fini>:
 8000290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000292:	bf00      	nop
 8000294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000296:	bc08      	pop	{r3}
 8000298:	469e      	mov	lr, r3
 800029a:	4770      	bx	lr
